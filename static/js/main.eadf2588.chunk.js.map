{"version":3,"sources":["utils/api.js","store/actions/background.js","store/actions/actionTypes.js","store/actions/weathers.js","components/Navigation/NavBar.jsx","components/UI/DateTime.jsx","hoc/layout.jsx","components/UI/Loader.jsx","components/ErrorBoundary.jsx","containers/WeatherToday.jsx","components/WeathersFiveDayItems/WeathersFiveDayListItems/WeathersFiveDayListItems.jsx","components/WeathersFiveDayItems/WeathersFiveDayItems.jsx","containers/WeatherFiveDay.jsx","App.jsx","store/reducers/weathers.js","store/reducers/background.js","store/reducers/rootReducer.js","index.js"],"names":["weatherApiLink","method","city","getBackStyle","dispatch","getState","console","log","background","now","Date","sunrise","weathers","systemData","sunset","getHours","setStyle","document","querySelector","classList","add","backStyle","style","type","setCityName","cityName","fetchWeathersSuccess","data","weatherConditions","weather","weatherMain","main","wind","sys","fetchWeathersError","e","error","fetchWeathersSuccessFiveDays","cityDataFiveDays","weatherInfoFiveDays","list","connect","state","props","className","cursor","id","to","exact","onClick","event","preventDefault","fetchValue","getElementById","value","charAt","toUpperCase","slice","cityNameHandler","placeholder","DateTime","getSunTime","toLocaleString","hour","minute","getDayLength","a","date","this","timerID","setInterval","tick","clearInterval","setState","React","Component","Layout","children","Loader","textAlign","ErrorBoundary","role","WeatherToday","fetchWeathers","prevProps","prevState","loading","length","src","icon","alt","description","title","Math","ceil","temp","feels_like","speed","pressure","humidity","stateCityName","axios","get","response","WeathersFiveDayListItems","listItem","pod","toLocaleTimeString","time","dt","WeathersFiveDayItems","daysFilter","dayDate","map","item","index","key","toLocaleDateString","weekday","dayString","WeatherFiveDay","parse","filter","i","push","fetchWeathersFiveDays","weatherInfo","App","path","component","initialState","combineReducers","action","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","app","ReactDOM","render"],"mappings":"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","file":"static/js/main.eadf2588.chunk.js","sourcesContent":["export const openWeatherApiKey = 'c792484ade42380886f51003cfcaf04d';\r\n\r\nexport const weatherApiLink = (method, city) =>\r\n    `https://api.openweathermap.org/data/2.5/${method}?q=${city},ua&units=metric&mode=json&appid=${openWeatherApiKey}`;\r\n\r\n// weather, forecast","import {\r\n    ADD_STYLE\r\n} from \"./actionTypes\"\r\n\r\nexport function getBackStyle() {\r\n    return (dispatch, getState)=>{\r\n        console.log(\"getState\",getState().background)\r\n        const now = new Date();\r\n        const sunrise = new Date(getState().weathers.systemData.sunrise * 1000);\r\n        const sunset = new Date(getState().weathers.systemData.sunset * 1000);\r\n        if(now.getHours() > sunrise.getHours() + 1 && now.getHours() < 11 ){\r\n            dispatch(setStyle('morning'))\r\n        } else if(now.getHours() >= 11 && now.getHours() <= sunset.getHours()-1){\r\n            dispatch(setStyle('afternoon'))\r\n        } else if(now.getHours() >= sunset.getHours() && now.getHours() <= sunset.getHours() + 1 ){\r\n            dispatch(setStyle('evening'))\r\n        } else if(now.getHours() >= sunrise.getHours() && now.getHours() <= sunrise.getHours() + 1 ) {\r\n            dispatch(setStyle('sunrise'))\r\n        } else {\r\n            dispatch(setStyle('night'))\r\n        }\r\n\r\n        const body = document.querySelector('body')\r\n        body.classList.add(getState().background.backStyle)\r\n    }\r\n}\r\nexport function setStyle(style) {\r\n    return{\r\n        type: ADD_STYLE,\r\n        backStyle: style\r\n    }\r\n}\r\n","export const FETCH_WEATHERS_START = 'FETCH_WEATHERS_START'\r\nexport const FETCH_WEATHERS_SUCCESS = 'FETCH_WEATHERS_SUCCESS'\r\nexport const FETCH_WEATHERS_ERROR = 'FETCH_WEATHERS_ERROR'\r\n\r\nexport const SET_CITY_NAME = 'SET_CITY_NAME'\r\n\r\nexport const FETCH_WEATHERS_SUCCESS_FIVE_DAYS = 'FETCH_WEATHERS_SUCCESS_FIVE_DAYS'\r\n\r\nexport const ADD_STYLE = 'ADD_STYLE'","import axios from \"axios\";\r\nimport {weatherApiLink} from \"../../utils/api\"\r\nimport {getBackStyle} from \"./background\"\r\nimport {\r\n    FETCH_WEATHERS_START,\r\n    FETCH_WEATHERS_SUCCESS,\r\n    FETCH_WEATHERS_ERROR,\r\n    SET_CITY_NAME,\r\n    FETCH_WEATHERS_SUCCESS_FIVE_DAYS\r\n} from \"./actionTypes\"\r\n\r\nexport function setCityName(cityName) {\r\n    console.log(\"cityName\",cityName )\r\n    return{\r\n        type: SET_CITY_NAME,\r\n        cityName\r\n    }\r\n}\r\n\r\nexport function fetchWeathers() {\r\n    return async (dispatch, getState) => {\r\n        console.log('get',getState().weathers)\r\n        dispatch(fetchWeathersStart())\r\n        const stateCityName = getState().weathers.cityName\r\n        try{\r\n            const response = await axios.get(weatherApiLink('weather', stateCityName))\r\n            const data = response.data\r\n\r\n            dispatch(fetchWeathersSuccess(data))\r\n            console.log('get',getState().weathers)\r\n            dispatch(getBackStyle())\r\n        } catch(e) {\r\n            dispatch(fetchWeathersError(e))\r\n        }\r\n    }\r\n}\r\nexport function fetchWeathersStart() {\r\n    return{\r\n        type: FETCH_WEATHERS_START\r\n    }\r\n}\r\nexport function fetchWeathersSuccess(data) {\r\n    return{\r\n        type: FETCH_WEATHERS_SUCCESS,\r\n        weatherConditions: data.weather[0],\r\n        weatherMain: data.main,\r\n        wind: data.wind,\r\n        systemData: data.sys,\r\n    }\r\n\r\n\r\n}\r\nexport function fetchWeathersError(e) {\r\n    return{\r\n        type: FETCH_WEATHERS_ERROR,\r\n        error: e\r\n    }\r\n}\r\n\r\nexport function fetchWeathersFiveDays() {\r\n    return async (dispatch, getState) => {\r\n        dispatch(fetchWeathersStart())\r\n        const stateCityName = getState().weathers.cityName\r\n        try{\r\n            const response = await axios.get(weatherApiLink('forecast', stateCityName))\r\n            const data = response.data\r\n            dispatch(fetchWeathersSuccessFiveDays(data))\r\n            dispatch(getBackStyle())\r\n        } catch(e) {\r\n            dispatch(fetchWeathersError(e))\r\n        }\r\n    }\r\n}\r\n\r\nexport function fetchWeathersSuccessFiveDays(data) {\r\n    return{\r\n        type: FETCH_WEATHERS_SUCCESS_FIVE_DAYS,\r\n        cityDataFiveDays: data.city,\r\n        weatherInfoFiveDays: data.list,\r\n        \r\n    }\r\n\r\n}","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\"\r\nimport {connect} from \"react-redux\"\r\nimport {setCityName} from \"../../store/actions/weathers\"\r\nconst NavBar = props => {\r\n    const cityNameHandler = (event) => {\r\n        event.preventDefault()\r\n            let fetchValue = document.getElementById('city-input').value;\r\n            let cityName = fetchValue.charAt(0).toUpperCase() + fetchValue.slice(1)\r\n            return cityName\r\n    }\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-light \">\r\n            <h4 className='display-4' style={{cursor: 'default'}}>Weather in Ukraine</h4>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                <ul className=\"navbar-nav mr-auto\">\r\n                    <li className=\"nav-item\">\r\n                        <NavLink to={'/'} exact className=\"navLink\"> now </NavLink>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <NavLink to={'/five-day'} exact className=\"navLink\">For 5 days</NavLink>\r\n                    </li>\r\n                </ul>\r\n                <form className=\"form-inline my-2 my-lg-1\">\r\n                    <button className=\"btn btn-outline-light my-2 my-sm-0 mr-1\"\r\n                            type=\"submit\"\r\n                            onClick={(event) => props.setCityName(cityNameHandler(event))}\r\n                    >\r\n                        SELECT\r\n                    </button>\r\n                    <input\r\n                        className=\"form-control mr-sm-2\"\r\n                        type=\"text\"\r\n                        id=\"city-input\"\r\n                        placeholder={props.cityName}\r\n\r\n                    />\r\n                </form>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return{\r\n        cityName: state.weathers.cityName\r\n    }\r\n}\r\nfunction mapDispatchToProps(dispatch){\r\n    return{\r\n        setCityName: (cityName) => dispatch(setCityName(cityName))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NavBar)","import React from \"react\";\r\nimport {connect} from \"react-redux\"\r\n\r\nclass DateTime extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            date: new Date()\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.timerID = setInterval(\r\n            () => this.tick(),\r\n            1000\r\n        );\r\n    }\r\n    componentWillUnmount() {\r\n        clearInterval(this.timerID);\r\n        }\r\n\r\n    tick() {\r\n        this.setState({\r\n            date: new Date()\r\n        });\r\n    }\r\n    getSunTime = props => {\r\n        let a = new Date(props)\r\n        let options = {hour: 'numeric', minute: 'numeric'}\r\n        return a.toLocaleString('ua', options)\r\n    };\r\n    getDayLength = (sunrise, sunset) => {\r\n        let a = new Date(sunset * 1000) - new Date(sunrise * 1000) - 3 * 3600000\r\n        let options = {hour: 'numeric', minute: 'numeric'}\r\n        return new Date(a).toLocaleString('ua', options)\r\n    };\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className='dateTime'>\r\n                <div>\r\n                    {this.state.date.toLocaleString()}\r\n                </div>\r\n                <div>\r\n                    Sunrise {this.getSunTime(this.props.data.sunrise * 1000)}\r\n                </div>\r\n                <div>\r\n                    Sunset {this.getSunTime(this.props.data.sunset * 1000)}\r\n                </div>\r\n                <div>\r\n                    Day length {this.getDayLength(this.props.data.sunrise, this.props.data.sunset)}\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\nfunction mapStateToProps(state){\r\n    return{\r\n        data: state.weathers.systemData\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(DateTime)","import React, {Component} from 'react';\r\nimport NavBar from \"../components/Navigation/NavBar\"\r\nimport DateTime from \"../components/UI/DateTime\"\r\n\r\nclass Layout extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <header>\r\n                    <NavBar />\r\n                </header>\r\n\r\n                <main>\r\n                    { this.props.children }\r\n                </main>\r\n\r\n                <footer>\r\n                    <DateTime/>\r\n                </footer>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Layout","import React from 'react';\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div style={{textAlign: 'center'}}>\r\n            <div className='lds-ripple'>\r\n                <div />\r\n                <div />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Loader;","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\"\r\nimport {connect} from \"react-redux\"\r\nimport {setCityName} from \"../store/actions/weathers\"\r\n\r\nclass ErrorBoundary extends React.Component {\r\n    cityNameHandler = (event) => {\r\n        let fetchValue = document.getElementById('error-input').value;\r\n        let cityName = fetchValue.charAt(0).toUpperCase() + fetchValue.slice(1)\r\n        return cityName\r\n    }\r\n\r\n    render() {\r\n        if(this.props.error){\r\n            return (\r\n                <div className='container error'>\r\n                    <h1 className='display-1'>\r\n                        Please enter the name of the city located in Ukraine.\r\n                    </h1>\r\n                    <form className=\"form-inline\">\r\n                        <input className=\"form-control form-control-lg\"\r\n                               type=\"text\"\r\n                               id=\"error-input\"\r\n                        />\r\n                        <div>\r\n                            <NavLink\r\n                                to={'/'}\r\n                                className=\"btn btn-outline-light\"\r\n                                role='button'\r\n                                type=\"submit\"\r\n                                onClick={(event) => this.props.setCityName(this.cityNameHandler(event))}\r\n                            >\r\n                                Send\r\n                            </NavLink>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            );\r\n        } else{\r\n            return this.props.children\r\n        }\r\n    }\r\n\r\n}\r\nfunction mapStateToProps(state) {\r\n    return{\r\n        error: state.weathers.error\r\n    }\r\n}\r\nfunction mapDispatchToProps(dispatch){\r\n    return{\r\n        setCityName: (cityName) => dispatch(setCityName(cityName))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ErrorBoundary);","import React from \"react\"\r\nimport Loader from \"../components/UI/Loader\"\r\nimport ErrorBoundary from \"../components/ErrorBoundary\"\r\nimport {connect} from \"react-redux\"\r\nimport {fetchWeathers} from \"../store/actions/weathers\"\r\n\r\nclass WeatherToday extends React.Component {\r\n    componentDidMount() {\r\n        console.log('didMount')\r\n        this.props.fetchWeathers()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.cityName !== this.props.cityName) {\r\n            this.props.fetchWeathers()\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <ErrorBoundary>\r\n                <div className='container'>\r\n                    <div className='weatherItem'>\r\n                        <div className='cityName'>\r\n                            <h1 className='display-1'>\r\n                                {this.props.cityName}\r\n                            </h1>\r\n\r\n                            {this.props.loading && this.props.length !== 0\r\n                                ? <Loader/>\r\n                                : <div className='icon'>\r\n                                    <img\r\n                                        src={`http://openweathermap.org/img/wn/${this.props.weatherConditions.icon}@2x.png`}\r\n                                        alt={this.props.weatherConditions.description}\r\n                                        title={this.props.weatherConditions.main}/>\r\n                                    <p>{this.props.weatherConditions.description}</p>\r\n                                </div>\r\n                            }\r\n\r\n                        </div>\r\n\r\n                        {this.props.loading && this.props.length !== 0\r\n                            ? <Loader/>\r\n                            : <div className='infoToday'>\r\n                                <div>\r\n                                    <h3 className='display-1'>{Math.ceil(this.props.weatherMain.temp) + ' °C'}</h3>\r\n                                    <div>\r\n                                        <p>Feels\r\n                                            like <strong>{Math.ceil(this.props.weatherMain.feels_like) + ' °C'}</strong>\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                                <div className='tempInfo'>\r\n                                    {/*<div>\r\n                Temp min {Math.ceil(weatherMain.temp_min) + ' °C'}\r\n            </div>\r\n            <div>\r\n                Temp max {Math.ceil(weatherMain.temp_max) + ' °C'}\r\n            </div>*/}\r\n                                    <div>\r\n                                        Wind {Math.ceil(this.props.wind.speed) + '  m/s'}\r\n                                    </div>\r\n                                    <div>\r\n                                        Pressure {this.props.weatherMain.pressure + ' hPa'}\r\n                                    </div>\r\n                                    <div>\r\n                                        Humidity {this.props.weatherMain.humidity + ' %'}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </ErrorBoundary>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n    return{\r\n        weatherMain: state.weathers.weatherMain,\r\n        weatherConditions: state.weathers.weatherConditions,\r\n        wind: state.weathers.wind,\r\n        systemData: state.weathers.systemData,\r\n        cityName: state.weathers.cityName,\r\n        loading: state.weathers.loading,\r\n    }\r\n}\r\nfunction mapDispatchToProps(dispatch){\r\n    return{\r\n        fetchWeathers: () => dispatch(fetchWeathers()),\r\n\r\n    }\r\n}\r\n\r\nexport default  connect(mapStateToProps, mapDispatchToProps)(WeatherToday)","import React from 'react';\r\n\r\nfunction WeathersFiveDayListItems(props) {\r\n    const {listItem} = props;\r\n    const time = props =>\r\n        new Date(props * 1000).toLocaleTimeString('ua', {hour: 'numeric', minute: 'numeric'} );\r\n    const getClassLi = () => listItem.sys.pod === 'd' ? 'dayList' : 'nightList';\r\n    return (\r\n        <li className={getClassLi()}>\r\n            <div >\r\n                {time(listItem.dt)}\r\n            </div>\r\n            <div>\r\n                <strong>{Math.ceil(listItem.main.temp)}</strong> °C\r\n            </div>\r\n                <img src={`http://openweathermap.org/img/wn/${listItem.weather[0].icon}.png`} alt=\"description\"\r\n                     title={listItem.weather[0].description}/>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default WeathersFiveDayListItems;","import React from 'react';\r\nimport WeathersFiveDayListItems from './WeathersFiveDayListItems/WeathersFiveDayListItems'\r\n\r\nconst WeathersFiveDayItems = props => {\r\n    const {daysFilter, dayDate} = props;\r\n    const dayString = props => {\r\n        return (\r\n            <div>\r\n                {new Date(props * 1000).toLocaleDateString()}\r\n                <h3>{new Date(props * 1000).toLocaleString('en-Ua',{weekday:'long'})}</h3>\r\n            </div>\r\n\r\n        )\r\n    };\r\n    return (\r\n        <div className='weatherFiveDayItems'>\r\n            {dayDate.map((item, index) =>{\r\n                return(\r\n                    <ul key={index}>\r\n                        {dayString(item.dt)}\r\n                            {daysFilter(index).map(listItem =>{\r\n                                 return(\r\n                                    <WeathersFiveDayListItems\r\n                                        listItem={listItem}\r\n                                        key={listItem.dt}\r\n                                    />\r\n                                )\r\n                            }\r\n                        )}\r\n                    </ul>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default WeathersFiveDayItems;","import React from 'react';\r\nimport Loader from \"../components/UI/Loader\"\r\nimport WeathersFiveDayItems from \"../components/WeathersFiveDayItems/WeathersFiveDayItems\"\r\nimport ErrorBoundary from \"../components/ErrorBoundary\"\r\nimport {connect} from \"react-redux\"\r\nimport {fetchWeathersFiveDays} from \"../store/actions/weathers\"\r\n\r\n\r\nclass WeatherFiveDay extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchWeathersFiveDays()\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.cityName !== this.props.cityName) {\r\n            this.props.fetchWeathersFiveDays()\r\n        }\r\n    }\r\n    daysFilter = props => {\r\n        let time = Date.parse(Date()) + 3*3600000 + (86400000 * props);\r\n        return this.props.weatherInfoFiveDays.filter(item =>\r\n            new Date(time).toLocaleDateString() === new Date(item.dt * 1000).toLocaleDateString())\r\n    };\r\n    dayDate = () => {\r\n        let dayDate = [];\r\n        for (let i = 0; i < 6; i++) {\r\n            if(this.daysFilter(i)[0]) {\r\n                dayDate.push(this.daysFilter(i)[0])\r\n            }\r\n        }\r\n        return dayDate\r\n    };\r\n    \r\n    render() {\r\n        return (\r\n            <ErrorBoundary>\r\n                <div className='container-'>\r\n                    <header style={{textAlign: 'center'}}>\r\n                        <h1 className='display-4' > {this.props.cityName} </h1>\r\n                        <p>Hourly weather and forecasts in your city.</p>\r\n                    </header>\r\n                    {this.props.loading\r\n                        ? <Loader />\r\n                        : <div>\r\n                            <WeathersFiveDayItems\r\n                                weatherInfo={this.props.weatherInfoFiveDays}\r\n                                daysFilter={this.daysFilter}\r\n                                dayDate={this.dayDate()}\r\n                            />\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </ErrorBoundary>\r\n\r\n        );\r\n    }\r\n}\r\nfunction mapStateToProps(state) {\r\n    return{\r\n        cityName: state.weathers.cityName,\r\n        weatherInfoFiveDays: state.weathers.weatherInfoFiveDays,\r\n        loading: state.weathers.loading,\r\n    }\r\n}\r\nfunction mapDispatchToProps(dispatch){\r\n    return{\r\n        fetchWeathersFiveDays: () => dispatch(fetchWeathersFiveDays()),\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(WeatherFiveDay);","import React from \"react\";\r\nimport Layout from \"./hoc/layout\"\r\nimport WeatherToday from \"./containers/WeatherToday\"\r\nimport WeatherFiveDay from \"./containers/WeatherFiveDay\"\r\nimport {Route, Switch, Redirect} from \"react-router-dom\"\r\n\r\nfunction App(){\r\n    return(\r\n        <div>\r\n            <Layout>\r\n                <Switch>\r\n                    <Route path='/five-day' exact component={WeatherFiveDay} />\r\n                    <Route path='/' exact component={WeatherToday} />\r\n                    <Redirect to={'/'} />\r\n                </Switch>\r\n            </Layout>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default App;","import {\r\n    FETCH_WEATHERS_START,\r\n    FETCH_WEATHERS_SUCCESS,\r\n    FETCH_WEATHERS_ERROR,\r\n    SET_CITY_NAME,\r\n    FETCH_WEATHERS_SUCCESS_FIVE_DAYS\r\n} from \"../actions/actionTypes\"\r\n\r\nconst initialState ={\r\n    weatherMain: [],\r\n    weatherConditions: [],\r\n    wind: [],\r\n    systemData: [],\r\n    cityName: 'Kharkov',\r\n    loading: false,\r\n    error: null,\r\n    cityDataFiveDays: [],\r\n    weatherInfoFiveDays: []\r\n}\r\n\r\nexport default function weathersReducer(state=initialState, action) {\r\n    switch(action.type){\r\n        case FETCH_WEATHERS_START:\r\n            return{\r\n                ...state, loading: true\r\n            }\r\n        case FETCH_WEATHERS_SUCCESS:\r\n            return{\r\n                ...state,\r\n                loading: false,\r\n                weatherConditions: action.weatherConditions,\r\n                weatherMain: action.weatherMain,\r\n                wind: action.wind,\r\n                systemData: action.systemData,\r\n                error: null\r\n            }\r\n        case FETCH_WEATHERS_ERROR:\r\n            return{\r\n                ...state, loading: false, error: action.error\r\n            }\r\n        case FETCH_WEATHERS_SUCCESS_FIVE_DAYS:\r\n            return{\r\n                ...state,\r\n                loading: false,\r\n                systemData: action.cityDataFiveDays,\r\n                weatherInfoFiveDays: action.weatherInfoFiveDays,\r\n                error: null\r\n            }\r\n        case SET_CITY_NAME:\r\n            return{\r\n                ...state, cityName: action.cityName\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    ADD_STYLE\r\n} from \"../actions/actionTypes\"\r\n\r\nconst initialState = {\r\n    backStyle: ''\r\n}\r\n\r\nexport default function backgroundReducer(state = initialState, action) {\r\n    switch(action.type){\r\n        case ADD_STYLE:\r\n            return{\r\n                ...state, backStyle: action.backStyle\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import {combineReducers} from \"redux\"\r\nimport weathersReducer from \"./weathers\"\r\nimport backgroundReducer from \"./background\"\r\n\r\nexport default combineReducers({\r\n    weathers: weathersReducer,\r\n    background: backgroundReducer\r\n})","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './styleseets/index.scss'\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"\r\nimport {BrowserRouter} from \"react-router-dom\"\r\nimport {createStore, compose, applyMiddleware} from \"redux\"\r\nimport {Provider} from \"react-redux\"\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./store/reducers/rootReducer\"\r\n\r\nconst composeEnhancers =\r\n    typeof window === 'object' &&\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\r\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n        }) : compose;\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n);\r\n\r\nconst app = (\r\n    <Provider store={store}>\r\n        <BrowserRouter>\r\n            <App />\r\n        </BrowserRouter>\r\n    </Provider>\r\n\r\n)\r\n        \r\nReactDOM.render(app, document.getElementById('root'));\r\n"],"sourceRoot":""}