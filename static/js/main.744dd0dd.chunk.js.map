{"version":3,"sources":["images/search.png","images/logo.svg","utils/api.js","store/actions/background.js","store/actions/actionTypes.js","store/actions/weathers.js","components/UI/Form.jsx","components/Navigation/NavBar.jsx","components/UI/DateTime.jsx","hoc/layout.jsx","components/UI/Loader.jsx","components/ErrorBoundary.jsx","containers/WeatherToday.jsx","components/WeathersFiveDayItems/WeatherFiveListHours/WeathersFiveDayListHoursItems/WeathersFiveDayListItems.jsx","components/WeathersFiveDayItems/WeatherFiveListHours/WeatherFiveListHours.jsx","components/WeathersFiveDayItems/WeathersFiveListDay.jsx","containers/WeatherFiveDay.jsx","App.jsx","store/reducers/weathers.js","store/reducers/background.js","store/reducers/rootReducer.js","index.js"],"names":["module","exports","weatherApiLink","method","city","getBackStyle","dispatch","getState","now","Date","sunrise","weathers","systemData","sunset","getHours","setStyle","body","document","querySelector","classList","add","background","backStyle","item","remove","style","type","setCityName","cityName","fetchWeathers","a","fetchWeathersStart","stateCityName","axios","get","response","data","fetchWeathersSuccess","fetchWeathersError","console","log","weatherConditions","weather","weatherMain","main","wind","sys","e","error","fetchWeathersSuccessFiveDays","cityDataFiveDays","weatherInfoFiveDays","list","connect","props","className","id","placeholder","onClick","event","preventDefault","fetchValue","getElementById","value","charAt","toUpperCase","slice","cityNameHandler","src","search","alt","state","logo","to","exact","DateTime","getDateString","date","toLocaleString","weekday","getSunTime","hour","minute","getDayLength","this","timerID","setInterval","tick","clearInterval","setState","children","React","Component","Layout","Loader","textAlign","ErrorBoundary","bodyClassRemove","WeatherToday","prevProps","prevState","loading","length","icon","description","title","Math","round","temp","feels_like","speed","pressure","humidity","WeathersFiveDayListItems","listItem","WeatherFiveListHours","dayString","toLocaleDateString","formatLabel","daysFilter","dayIndex","dt","toLocaleTimeString","getValue","index","display","el","createElement","innerText","querySelectorAll","appendChild","floor","maxValue","minValue","onChange","key","map","WeathersFiveListDay","dayDate","WeatherFiveDay","time","parse","filter","i","push","fetchWeathersFiveDays","weatherInfo","App","path","component","initialState","combineReducers","action","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","app","ReactDOM","render"],"mappings":"sFAAAA,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,kC,mOCG9BC,EAAiB,SAACC,EAAQC,GAAT,kDACWD,EADX,cACuBC,EADvB,4CAFG,qCCG1B,SAASC,IACZ,OAAO,SAACC,EAAUC,GACd,IAAMC,EAAM,IAAIC,KACVC,EAAU,IAAID,KAA8C,IAAzCF,IAAWI,SAASC,WAAWF,SAClDG,EAAS,IAAIJ,KAA6C,IAAxCF,IAAWI,SAASC,WAAWC,QACpDL,EAAIM,WAAaJ,EAAQI,WAAa,GAAKN,EAAIM,WAAa,GAC3DR,EAASS,EAAS,YACZP,EAAIM,YAAc,IAAMN,EAAIM,YAAcD,EAAOC,WAAW,EAClER,EAASS,EAAS,cACZP,EAAIM,YAAcD,EAAOC,YAAcN,EAAIM,YAAcD,EAAOC,WAAa,EACnFR,EAASS,EAAS,YACZP,EAAIM,YAAcJ,EAAQI,YAAcN,EAAIM,YAAcJ,EAAQI,WAAa,EACrFR,EAASS,EAAS,YAElBT,EAASS,EAAS,UAEtB,IAAMC,EAAOC,SAASC,cAAc,QACpCF,EAAKG,UAAUC,IAAIb,IAAWc,WAAWC,WACtCN,EAAKG,UAAUI,KAAK,IACnBP,EAAKG,UAAUK,OAAOR,EAAKG,UAAUI,KAAK,KAI/C,SAASR,EAASU,GACrB,MAAM,CACFC,KCrBiB,YDsBjBJ,UAAWG,GEnBZ,SAASE,EAAYC,GACxB,MAAM,CACFF,KDTqB,gBCUrBE,YAID,SAASC,IACZ,8CAAO,WAAOvB,EAAUC,GAAjB,mBAAAuB,EAAA,6DACHxB,EAASyB,KACHC,EAAgBzB,IAAWI,SAASiB,SAFvC,kBAIwBK,IAAMC,IAAIhC,EAAe,UAAW8B,IAJ5D,OAIOG,EAJP,OAKOC,EAAOD,EAASC,KAEtB9B,EAAS+B,EAAqBD,IAC9B9B,EAASD,KARV,kDAUCC,EAASgC,EAAmB,EAAD,KAC3BC,QAAQC,IAAI,WAXb,0DAAP,wDAeG,SAAST,IACZ,MAAM,CACFL,KDpC4B,wBCuC7B,SAASW,EAAqBD,GACjC,MAAM,CACFV,KDxC8B,yBCyC9Be,kBAAmBL,EAAKM,QAAQ,GAChCC,YAAaP,EAAKQ,KAClBC,KAAMT,EAAKS,KACXjC,WAAYwB,EAAKU,KAKlB,SAASR,EAAmBS,GAC/B,MAAM,CACFrB,KDlD4B,uBCmD5BsB,MAAOD,GAoBR,SAASE,EAA6Bb,GACzC,MAAM,CACFV,KDrEwC,mCCsExCwB,iBAAkBd,EAAKhC,KACvB+C,oBAAqBf,EAAKgB,MCrCnBC,kBAAQ,MANvB,SAA4B/C,GACxB,MAAM,CACFqB,YAAa,SAACC,GAAD,OAActB,EAASqB,EAAYC,QAIzCyB,EAnCF,SAACC,GASV,OACI,0BAAMC,UAAU,QACZ,2BACIA,UAAU,cACV7B,KAAK,OACL8B,GAAE,UAAKF,EAAME,GAAX,UACFC,YAAY,gBAGhB,4BAAQF,UAAU,WACV7B,KAAK,SACLgC,QAAS,SAACC,GAAD,OAAWL,EAAM3B,YAnBlB,SAACgC,GACrBA,EAAMC,iBACN,IAAIC,EAAa5C,SAAS6C,eAAT,UAA2BR,EAAME,GAAjC,WAA6CO,MAG9D,OAFAxB,QAAQC,IAAIqB,GACGA,EAAWG,OAAO,GAAGC,cAAgBJ,EAAWK,MAAM,GAenBC,CAAgBR,MAE1D,0BAAMJ,UAAU,kBAAhB,UACA,yBAAKA,UAAU,iBAAiBa,IAAKC,IAAQC,IAAI,gB,yBCmClDjB,mBAZf,SAAyBkB,GACrB,MAAM,CACF3C,SAAU2C,EAAM5D,SAASiB,SACzBoB,MAAOuB,EAAM5D,SAASqC,UAG9B,SAA4B1C,GACxB,MAAM,CACFqB,YAAa,SAACC,GAAD,OAActB,EAASqB,EAAYC,QAIzCyB,EAvDA,SAAAC,GACX,OACI,yBAAKC,UAAU,aACX,yBAAKA,UAAU,UACX,yBACIA,UAAU,gBACVG,QAAS,kBAAMJ,EAAM3B,YAAY,aAEjC,yBAAK4B,UAAU,eAAea,IAAKI,IAAMF,IAAI,SAC7C,yBAAKf,UAAU,gBACX,0BAAMA,UAAU,uBAAhB,OACA,0BAAMA,UAAU,uBAAhB,wBAMJD,EAAMN,MACJ,KAEE,kBAAC,WAAD,KACI,wBAAIO,UAAU,eACV,wBAAIA,UAAU,qBACV,kBAAC,IAAD,CAASA,UAAU,oBAAoBkB,GAAI,mBAAoBC,OAAK,GAApE,cAEJ,wBAAInB,UAAU,qBACV,kBAAC,IAAD,CAASA,UAAU,oBAAoBkB,GAAI,4BAA6BC,OAAK,GAA7E,gBAGR,yBAAKnB,UAAU,gBACX,kBAAC,EAAD,CACIC,GAAI,kBClClCmB,E,kDACF,WAAYrB,GAAQ,IAAD,8BACf,cAAMA,IAoBVsB,cAAgB,WACZ,IAAIC,EAAO,EAAKN,MAAMM,KACtB,OACI,kBAAC,WAAD,KACI,0BAAMtB,UAAU,sBAAsBsB,EAAKC,eAAe,QAAS,CAACC,QAAS,UAC7E,0BAAMxB,UAAU,sBAAsBsB,EAAKC,qBA1BpC,EA8BnBE,WAAa,SAAA1B,GAGT,OAFQ,IAAI7C,KAAK6C,GAERwB,eAAe,KADV,CAACG,KAAM,UAAWC,OAAQ,aAhCzB,EAmCnBC,aAAe,SAACzE,EAASG,GACrB,IAAIiB,EAAI,IAAIrB,KAAc,IAATI,GAAiB,IAAIJ,KAAe,IAAVC,GAAkB,MAE7D,OAAO,IAAID,KAAKqB,GAAGgD,eAAe,KADpB,CAACG,KAAM,UAAWC,OAAQ,aAnCxC,EAAKX,MAAQ,CACTM,KAAM,IAAIpE,MAHC,E,gEAME,IAAD,OAChB2E,KAAKC,QAAUC,aACX,kBAAM,EAAKC,SACX,O,6CAIJC,cAAcJ,KAAKC,W,6BAInBD,KAAKK,SAAS,CACVZ,KAAM,IAAIpE,S,+BAyBd,OACI,kBAAC,WAAD,KACI,yBAAK8C,UAAU,iBACV6B,KAAKR,iBAETQ,KAAK9B,MAAMoC,SAEZN,KAAK9B,MAAMN,MACN,KACA,kBAAC,WAAD,KACG,wBAAIO,UAAU,aACV,wBAAIA,UAAU,mBAAd,WACa6B,KAAKJ,WAAqC,IAA1BI,KAAK9B,MAAMlB,KAAK1B,UAE7C,wBAAI6C,UAAU,mBAAd,UACY6B,KAAKJ,WAAoC,IAAzBI,KAAK9B,MAAMlB,KAAKvB,SAE5C,wBAAI0C,UAAU,mBAAd,cACgB6B,KAAKD,aAAaC,KAAK9B,MAAMlB,KAAK1B,QAAS0E,KAAK9B,MAAMlB,KAAKvB,UAG/E,4BAAQ0C,UAAU,UACd,kBAAC,EAAD,CACIC,GAAI,kB,GAnEbmC,IAAMC,WAkFdvC,mBANf,SAAyBkB,GACrB,MAAM,CACFnC,KAAMmC,EAAM5D,SAASC,WACrBoC,MAAOuB,EAAM5D,SAASqC,SAGfK,CAAyBsB,GC9DzBkB,E,uKAlBP,OACI,kBAAC,WAAD,KAEI,4BAAQtC,UAAU,UACd,kBAAC,EAAD,OAGJ,0BAAMA,UAAU,aACZ,kBAAC,EAAD,KACM6B,KAAK9B,MAAMoC,gB,GAZhBE,aCSNE,EAXA,WACX,OACI,yBAAKrE,MAAO,CAACsE,UAAW,WACpB,yBAAKxC,UAAU,cACX,8BACA,iCCDVyC,E,4MACFC,gBAAkB,WACd,IAAMjF,EAAOC,SAASC,cAAc,QAC9BqC,EAAYvC,EAAKG,UAAUI,KAAK,GACtC,OAAOP,EAAKG,UAAUK,OAAO+B,I,uDAG7B,OAAG6B,KAAK9B,MAAMN,OACVoC,KAAKa,kBAED,yBAAK1C,UAAU,aACX,kBAAC,EAAD,MACA,yBAAKA,UAAU,SAAf,yDAGA,kBAAC,EAAD,CACIC,GAAI,YAKT4B,KAAK9B,MAAMoC,a,GArBFC,IAAMC,WAsCnBvC,mBAZf,SAAyBkB,GACrB,MAAM,CACFvB,MAAOuB,EAAM5D,SAASqC,MACtBpB,SAAU2C,EAAM5D,SAASiB,aAGjC,SAA4BtB,GACxB,MAAM,CACFuB,cAAe,kBAAMvB,EAASuB,SAIvBwB,CAA6C2C,GCrCtDE,E,kLAEEd,KAAK9B,MAAMzB,kB,yCAGIsE,EAAWC,GACtBD,EAAUvE,WAAawD,KAAK9B,MAAM1B,UAClCwD,KAAK9B,MAAMzB,kB,+BAKf,OACI,kBAAC,EAAD,KACKuD,KAAK9B,MAAM+C,SAAiC,IAAtBjB,KAAK9B,MAAMgD,OAC5B,kBAAC,EAAD,MACA,yBAAK/C,UAAU,WACb,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,aACV6B,KAAK9B,MAAM1B,UAGhB,yBAAK2B,UAAU,wBACX,yBACIA,UAAU,uBACVa,IAAG,2CAAsCgB,KAAK9B,MAAMb,kBAAkB8D,KAAnE,WACHjC,IAAKc,KAAK9B,MAAMb,kBAAkB+D,YAClCC,MAAOrB,KAAK9B,MAAMb,kBAAkBG,OACxC,yBAAKW,UAAU,oCAAoC6B,KAAK9B,MAAMb,kBAAkB+D,eAIxF,yBAAKjD,UAAU,gBACX,yBAAKA,UAAU,qBACX,yBAAKA,UAAU,2BACVmD,KAAKC,MAAMvB,KAAK9B,MAAMX,YAAYiE,MAAQ,UAE/C,yBAAKrD,UAAU,gCAAf,eACgB,gCAASmD,KAAKC,MAAMvB,KAAK9B,MAAMX,YAAYkE,YAAc,YAG7E,wBAAItD,UAAU,sBACV,wBAAIA,UAAU,6BAAd,SACWmD,KAAKC,MAAMvB,KAAK9B,MAAMT,KAAKiE,OAAS,SAE/C,wBAAIvD,UAAU,6BAAd,aACe6B,KAAK9B,MAAMX,YAAYoE,SAAW,QAEjD,wBAAIxD,UAAU,6BAAd,aACe6B,KAAK9B,MAAMX,YAAYqE,SAAW,c,GAjDtDrB,IAAMC,WA6EjBvC,mBAhBhB,SAAyBkB,GACrB,MAAM,CACF5B,YAAa4B,EAAM5D,SAASgC,YAC5BF,kBAAmB8B,EAAM5D,SAAS8B,kBAClCI,KAAM0B,EAAM5D,SAASkC,KACrBjC,WAAY2D,EAAM5D,SAASC,WAC3BgB,SAAU2C,EAAM5D,SAASiB,SACzByE,QAAS9B,EAAM5D,SAAS0F,YAGhC,SAA4B/F,GACxB,MAAM,CACFuB,cAAe,kBAAMvB,EAASuB,SAItBwB,CAA6C6C,GCjD9Ce,MAjCf,SAAkC3D,GAAQ,IAC/B4D,EAAY5D,EAAZ4D,SACP,OACI,wBAAI3D,UAAU,mBACV,yBAAKA,UAAU,yBACP,8BAAOmD,KAAKC,MAAMO,EAAStE,KAAKgE,OADxC,WAGA,wBAAIrD,UAAU,8BACV,wBAAIA,UAAU,yBAAd,eACiBmD,KAAKC,MAAMO,EAAStE,KAAKiE,YAD1C,UAGA,wBAAItD,UAAU,yBAAd,aACemD,KAAKC,MAAMO,EAAStE,KAAKoE,UADxC,MAGA,wBAAIzD,UAAU,yBAAd,aACemD,KAAKC,MAAMO,EAAStE,KAAKmE,UADxC,QAGA,wBAAIxD,UAAU,yBAAd,SACWmD,KAAKC,MAAMO,EAASrE,KAAKiE,OADpC,SAIJ,yBAAKvD,UAAU,0BACX,yBACIA,UAAU,wBACVa,IAAG,2CAAsC8C,EAASxE,QAAQ,GAAG6D,KAA1D,WACHjC,IAAI,cACJmC,MAAOS,EAASxE,QAAQ,GAAG8D,kB,iBC4DhCW,E,4MAnFX5C,MAAM,CACFR,MAAO,G,EAOXqD,UAAY,SAAA9D,GACR,OACI,yBAAKC,UAAU,mBACX,yBAAKA,UAAU,4BACV,IAAI9C,KAAa,IAAR6C,GAAc+D,sBAE5B,yBAAK9D,UAAU,6BACV,IAAI9C,KAAa,IAAR6C,GAAcwB,eAAe,QAAQ,CAACC,QAAQ,Y,EAMxEuC,YAAc,SAACvD,GACX,IAAaT,EAEb,OAFaA,EAED,EAAKA,MAAMiE,WAAW,EAAKjE,MAAMkE,UAAUzD,GAAO0D,GAD1D,IAAIhH,KAAa,IAAR6C,GAAcoE,mBAAmB,KAAM,CAACzC,KAAM,UAAWC,OAAQ,a,EAIlFyC,SAAW,WACP,IAAMC,EAAQ,EAAKtE,MAAMkE,SACnBlB,EAAS,EAAKhD,MAAMiE,WAAWK,GAAOtB,OAC5C,GAAc,IAAXA,EAAa,CACZrF,SAAS6C,eAAT,gBAAiC8D,IAASnG,MAAMoG,QAAU,OAC1D,IAAIC,EAAK7G,SAAS8G,cAAc,OAChCD,EAAGE,UAAY,EAAKV,YAAY,EAAK/C,MAAMR,OAC3C9C,SAASgH,iBAAiB,oBAAoBL,GAAOM,YAAYJ,QAC9D,GAAIxB,EAAS,EAChB,EAAKb,SAAS,CACV1B,MAAO,QAER,CACH,IAAMA,EAAQ2C,KAAKyB,OAAO7B,EAAS,GAAK,GACxC,EAAKb,SAAS,CACV1B,Y,kEArCRqB,KAAKuC,a,+BA0CC,IAAD,SACgCvC,KAAK9B,MAAnCkE,EADF,EACEA,SAAU3C,EADZ,EACYA,KAAM0C,EADlB,EACkBA,WACvB,OACI,6BACKnC,KAAKgC,UAAUvC,GAChB,yBAAKtB,UAAU,QAAQC,GAAE,gBAAWgE,IAChC,kBAAC,IAAD,CACIF,YAAa,SAAAvD,GAAK,OAAI,EAAKuD,YAAYvD,IACvCqE,SAAUb,EAAWC,GAAUlB,OAAO,EACtC+B,SAAU,EACVtE,MAAOqB,KAAKb,MAAMR,MAClBuE,SAAU,SAAAvE,GAAK,OAAG,EAAK0B,SAAS,CAAE1B,cAG1C,wBACIR,UAAU,kBACVgF,IAAKf,GAEJD,EAAWC,GAAUgB,KAAI,SAACtB,EAAUU,GACjC,GAAG,EAAKrD,MAAMR,QAAU6D,EACpB,OACI,kBAAC,EAAD,CACIV,SAAUA,EACVqB,IAAKrB,EAASO,c,GAvEf7B,aCwBpB6C,E,uKAxBD,IAAD,EACyBrD,KAAK9B,MAA5BiE,EADF,EACEA,WAAYmB,EADd,EACcA,QACnB,OACI,yBAAKnF,UAAU,uBACVmF,EAAQF,KAAI,SAACjH,EAAMqG,GAChB,OACI,yBACIrE,UAAU,sBACVgF,IAAKhH,EAAKkG,IACV,kBAAC,EAAD,CACID,SAAUI,EACV/C,KAAMtD,EAAKkG,GACXF,WAAYA,c,GAbV5B,IAAMC,WCKlC+C,E,4MAYFpB,WAAa,SAAAjE,GACT,IAAIsF,EAAOnI,KAAKoI,MAAMpI,QAAU,MAAa,MAAW6C,EACxD,OAAO,EAAKA,MAAMH,oBAAoB2F,QAAO,SAAAvH,GAAI,OAC7C,IAAId,KAAKmI,GAAMvB,uBAAyB,IAAI5G,KAAe,IAAVc,EAAKkG,IAAWJ,yB,EAEzEqB,QAAU,WAEN,IADA,IAAIA,EAAU,GACLK,EAAI,EAAGA,EAAI,EAAGA,IAChB,EAAKxB,WAAWwB,GAAG,IAClBL,EAAQM,KAAK,EAAKzB,WAAWwB,GAAG,IAGxC,OAAOL,G,kEArBPtD,KAAK9B,MAAM2F,0B,yCAGI9C,EAAWC,GACtBD,EAAUvE,WAAawD,KAAK9B,MAAM1B,UAClCwD,KAAK9B,MAAM2F,0B,+BAoBf,OACI,kBAAC,EAAD,KACI,yBAAK1F,UAAU,IACX,yBAAKA,UAAU,eACX,yBAAKA,UAAU,aAAf,IAA8B6B,KAAK9B,MAAM1B,SAAzC,KACA,yBAAK2B,UAAU,sBAAf,+CAEH6B,KAAK9B,MAAM+C,QACN,kBAAC,EAAD,MACA,yBAAK9C,UAAU,aACb,kBAAC,EAAD,CACI2F,YAAa9D,KAAK9B,MAAMH,oBACxBoE,WAAYnC,KAAKmC,WACjBmB,QAAStD,KAAKsD,mB,GAzCjB/C,IAAMC,WA+DpBvC,mBAZf,SAAyBkB,GACrB,MAAM,CACF3C,SAAU2C,EAAM5D,SAASiB,SACzBuB,oBAAqBoB,EAAM5D,SAASwC,oBACpCkD,QAAS9B,EAAM5D,SAAS0F,YAGhC,SAA4B/F,GACxB,MAAM,CACF2I,sBAAuB,kBAAM3I,EXVjC,uCAAO,WAAOA,EAAUC,GAAjB,mBAAAuB,EAAA,6DACHxB,EAxBE,CACFoB,KDpC4B,yBC4DtBM,EAAgBzB,IAAWI,SAASiB,SAFvC,kBAIwBK,IAAMC,IAAIhC,EAAe,WAAY8B,IAJ7D,OAIOG,EAJP,OAKOC,EAAOD,EAASC,KACtB9B,EAAS2C,EAA6Bb,IACtC9B,EAASD,KAPV,kDASCC,EAASgC,EAAmB,EAAD,KAC3BC,QAAQC,IAAI,WAVb,0DAAP,6DWaWa,CAA6CsF,G,QCnD7CQ,MAdf,WAAe,IAAD,EACV,OACI,6BACI,kBAAC,EAAD,KACI,kBAAC,IAAD,eACK,kBAAC,IAAD,CAAOC,KAAK,4BAA6BC,UAAWV,WADzD,QAC+E,kBAAC,IAAD,CAAUlE,GAAI,sBACzF,kBAAC,IAAD,CAAO2E,KAAK,oBAAoB1E,OAAK,EAAC2E,UAAWnD,IACjD,kBAAC,IAAD,CAAUzB,GAAI,2B,gCCL5B6E,EAAc,CAChB3G,YAAa,GACbF,kBAAmB,GACnBI,KAAM,GACNjC,WAAY,GACZgB,SAAU,UACVyE,SAAS,EACTrD,MAAO,KACPE,iBAAkB,GAClBC,oBAAqB,ICbzB,IAAMmG,GAAe,CACjBhI,UAAW,ICDAiI,mBAAgB,CAC3B5I,SFeW,WAAsD,IAA7B4D,EAA4B,uDAAtB+E,EAAcE,EAAQ,uCAChE,OAAOA,EAAO9H,MACV,IdtB4B,uBcuBxB,sBACO6C,EADP,CACc8B,SAAS,IAE3B,IdzB8B,yBc0B1B,sBACO9B,EADP,CAEI8B,SAAS,EACT5D,kBAAmB+G,EAAO/G,kBAC1BE,YAAa6G,EAAO7G,YACpBE,KAAM2G,EAAO3G,KACbjC,WAAY4I,EAAO5I,WACnBoC,MAAO,OAEf,IdlC4B,uBcmCxB,sBACOuB,EADP,CACc8B,SAAS,EAAOrD,MAAOwG,EAAOxG,QAEhD,IdlCwC,mCcmCpC,sBACOuB,EADP,CAEI8B,SAAS,EACTzF,WAAY4I,EAAOtG,iBACnBC,oBAAqBqG,EAAOrG,oBAC5BH,MAAO,OAEf,Id5CqB,gBc6CjB,sBACOuB,EADP,CACc3C,SAAU4H,EAAO5H,WAEnC,QACI,OAAO2C,IE/CflD,WDEW,WAA0D,IAA/BkD,EAA8B,uDAAtB+E,GAAcE,EAAQ,uCACpE,OAAOA,EAAO9H,MACV,IfFiB,YeGb,sBACO6C,EADP,CACcjD,UAAWkI,EAAOlI,YAEpC,QACI,OAAOiD,MELbkF,GACgB,kBAAXC,QACPA,OAAOC,qCACHD,OAAOC,qCAAqC,IACvCC,IAEPC,GAAQC,YACVC,GACAN,GACIO,YAAgBC,OAIlBC,GACF,kBAAC,IAAD,CAAUL,MAAOA,IACb,kBAAC,IAAD,KACI,kBAAC,EAAD,QAMZM,IAASC,OAAOF,GAAKjJ,SAAS6C,eAAe,W","file":"static/js/main.744dd0dd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/search.ba135db7.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.556f09e8.svg\";","// export const openWeatherApiKey = 'c792484ade42380886f51003cfcaf04d';  // AJ\r\nexport const openWeatherApiKey = '29c7fb83d633d43cf3d3248fc11582a2'; // MY\r\n\r\nexport const weatherApiLink = (method, city) =>\r\n    `//api.openweathermap.org/data/2.5/${method}?q=${city},ua&units=metric&mode=json&appid=${openWeatherApiKey}`;\r\n\r\n// weather, forecast","import {\r\n    ADD_STYLE\r\n} from \"./actionTypes\"\r\n\r\nexport function getBackStyle() {\r\n    return (dispatch, getState)=>{\r\n        const now = new Date();\r\n        const sunrise = new Date(getState().weathers.systemData.sunrise * 1000);\r\n        const sunset = new Date(getState().weathers.systemData.sunset * 1000);\r\n        if(now.getHours() > sunrise.getHours() + 1 && now.getHours() < 11 ){\r\n            dispatch(setStyle('morning'))\r\n        } else if(now.getHours() >= 11 && now.getHours() <= sunset.getHours()-1){\r\n            dispatch(setStyle('afternoon'))\r\n        } else if(now.getHours() >= sunset.getHours() && now.getHours() <= sunset.getHours() + 1 ){\r\n            dispatch(setStyle('evening'))\r\n        } else if(now.getHours() >= sunrise.getHours() && now.getHours() <= sunrise.getHours() + 1 ) {\r\n            dispatch(setStyle('sunrise'))\r\n        } else {\r\n            dispatch(setStyle('night'))\r\n        }\r\n        const body = document.querySelector('body')\r\n        body.classList.add(getState().background.backStyle)\r\n        if(body.classList.item(1)){\r\n            body.classList.remove(body.classList.item(0))\r\n        }\r\n    }\r\n}\r\nexport function setStyle(style) {\r\n    return{\r\n        type: ADD_STYLE,\r\n        backStyle: style\r\n    }\r\n}\r\n","export const FETCH_WEATHERS_START = 'FETCH_WEATHERS_START'\r\nexport const FETCH_WEATHERS_SUCCESS = 'FETCH_WEATHERS_SUCCESS'\r\nexport const FETCH_WEATHERS_ERROR = 'FETCH_WEATHERS_ERROR'\r\n\r\nexport const SET_CITY_NAME = 'SET_CITY_NAME'\r\n\r\nexport const FETCH_WEATHERS_SUCCESS_FIVE_DAYS = 'FETCH_WEATHERS_SUCCESS_FIVE_DAYS'\r\n\r\nexport const ADD_STYLE = 'ADD_STYLE'","import axios from \"axios\";\r\nimport {weatherApiLink} from \"../../utils/api\"\r\nimport {getBackStyle} from \"./background\"\r\nimport {\r\n    FETCH_WEATHERS_START,\r\n    FETCH_WEATHERS_SUCCESS,\r\n    FETCH_WEATHERS_ERROR,\r\n    SET_CITY_NAME,\r\n    FETCH_WEATHERS_SUCCESS_FIVE_DAYS\r\n} from \"./actionTypes\"\r\n\r\nexport function setCityName(cityName) {\r\n    return{\r\n        type: SET_CITY_NAME,\r\n        cityName\r\n    }\r\n}\r\n\r\nexport function fetchWeathers() {\r\n    return async (dispatch, getState) => {\r\n        dispatch(fetchWeathersStart())\r\n        const stateCityName = getState().weathers.cityName\r\n        try{\r\n            const response = await axios.get(weatherApiLink('weather', stateCityName))\r\n            const data = response.data\r\n\r\n            dispatch(fetchWeathersSuccess(data))\r\n            dispatch(getBackStyle())\r\n        } catch(e) {\r\n            dispatch(fetchWeathersError(e))\r\n            console.log('aaaaaaa')\r\n        }\r\n    }\r\n}\r\nexport function fetchWeathersStart() {\r\n    return{\r\n        type: FETCH_WEATHERS_START\r\n    }\r\n}\r\nexport function fetchWeathersSuccess(data) {\r\n    return{\r\n        type: FETCH_WEATHERS_SUCCESS,\r\n        weatherConditions: data.weather[0],\r\n        weatherMain: data.main,\r\n        wind: data.wind,\r\n        systemData: data.sys,\r\n    }\r\n\r\n\r\n}\r\nexport function fetchWeathersError(e) {\r\n    return{\r\n        type: FETCH_WEATHERS_ERROR,\r\n        error: e\r\n    }\r\n}\r\n\r\nexport function fetchWeathersFiveDays() {\r\n    return async (dispatch, getState) => {\r\n        dispatch(fetchWeathersStart())\r\n        const stateCityName = getState().weathers.cityName\r\n        try{\r\n            const response = await axios.get(weatherApiLink('forecast', stateCityName))\r\n            const data = response.data\r\n            dispatch(fetchWeathersSuccessFiveDays(data))\r\n            dispatch(getBackStyle())\r\n        } catch(e) {\r\n            dispatch(fetchWeathersError(e))\r\n            console.log('aaaaaaa')\r\n        }\r\n    }\r\n}\r\n\r\nexport function fetchWeathersSuccessFiveDays(data) {\r\n    return{\r\n        type: FETCH_WEATHERS_SUCCESS_FIVE_DAYS,\r\n        cityDataFiveDays: data.city,\r\n        weatherInfoFiveDays: data.list,\r\n        \r\n    }\r\n\r\n}","import React from 'react';\r\nimport search from '../../images/search.png'\r\nimport {connect} from \"react-redux\"\r\nimport {setCityName} from \"../../store/actions/weathers\"\r\n\r\nconst Form = (props) => {\r\n    const cityNameHandler = (event) => {\r\n        event.preventDefault()\r\n        let fetchValue = document.getElementById(`${props.id}-input`).value;\r\n        console.log(fetchValue)\r\n        let cityName = fetchValue.charAt(0).toUpperCase() + fetchValue.slice(1)\r\n        return cityName\r\n    }\r\n\r\n    return (\r\n        <form className=\"form\">\r\n            <input\r\n                className=\"form__input\"\r\n                type=\"text\"\r\n                id={`${props.id}-input`}\r\n                placeholder='Change city'\r\n\r\n            />\r\n            <button className=\"form-btn\"\r\n                    type=\"submit\"\r\n                    onClick={(event) => props.setCityName(cityNameHandler(event))}\r\n            >\r\n                <span className='form-btn__text'>select</span>\r\n                <img className='form-btn__icon' src={search} alt=\"select\"/>\r\n            </button>\r\n\r\n        </form>\r\n    );\r\n}\r\nfunction mapDispatchToProps(dispatch){\r\n    return{\r\n        setCityName: (cityName) => dispatch(setCityName(cityName))\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Form)","import React, {Fragment} from \"react\";\r\nimport Form from '../UI/Form'\r\nimport logo from '../../images/logo.svg'\r\nimport {NavLink} from \"react-router-dom\"\r\nimport {connect} from \"react-redux\"\r\nimport {setCityName} from \"../../store/actions/weathers\"\r\n\r\n\r\nconst NavBar = props => {\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"navbar\">\r\n                <div\r\n                    className=\"navbar__brand\"\r\n                    onClick={() => props.setCityName(\"Kharkov\")}\r\n                >\r\n                    <img className='navbar__logo' src={logo} alt=\"logo\" />\r\n                    <div className='navbar__name'>\r\n                        <span className='navbar__name--small'>wiu</span>\r\n                        <span className='navbar__name--large'>weather in ukraine</span>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                {\r\n                    props.error\r\n                    ? null\r\n                    : (\r\n                        <Fragment>\r\n                            <ul className='navbar-list'>\r\n                                <li className=\"navbar-list__item\">\r\n                                    <NavLink className=\"navbar-list__link\" to={'/weatherForecast'} exact> Current </NavLink>\r\n                                </li>\r\n                                <li className=\"navbar-list__item\">\r\n                                    <NavLink className=\"navbar-list__link\" to={'/weatherForecast/five-day'} exact>For 5 days</NavLink>\r\n                                </li>\r\n                            </ul>\r\n                            <div className='form--navbar'>\r\n                                <Form\r\n                                    id={'navbar'}\r\n                                />\r\n                            </div>\r\n                        </Fragment>\r\n\r\n                    )\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return{\r\n        cityName: state.weathers.cityName,\r\n        error: state.weathers.error\r\n    }\r\n}\r\nfunction mapDispatchToProps(dispatch){\r\n    return{\r\n        setCityName: (cityName) => dispatch(setCityName(cityName))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NavBar)","import React, {Fragment} from \"react\";\r\nimport {connect} from \"react-redux\"\r\nimport Form from '../UI/Form'\r\n\r\n\r\nclass DateTime extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            date: new Date()\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.timerID = setInterval(\r\n            () => this.tick(),\r\n            1000\r\n        );\r\n    }\r\n    componentWillUnmount() {\r\n        clearInterval(this.timerID);\r\n        }\r\n\r\n    tick() {\r\n        this.setState({\r\n            date: new Date()\r\n        });\r\n    }\r\n    getDateString = () => {\r\n        let date = this.state.date\r\n        return (\r\n            <Fragment>\r\n                <span className='time__current-week'>{date.toLocaleString('en-Ua', {weekday: 'long'})}</span>\r\n                <span className='time__current-date'>{date.toLocaleString()}</span>\r\n            </Fragment>\r\n        )\r\n    }\r\n    getSunTime = props => {\r\n        let a = new Date(props)\r\n        let options = {hour: 'numeric', minute: 'numeric'}\r\n        return a.toLocaleString('ua', options)\r\n    };\r\n    getDayLength = (sunrise, sunset) => {\r\n        let a = new Date(sunset * 1000) - new Date(sunrise * 1000) - 3 * 3600000\r\n        let options = {hour: 'numeric', minute: 'numeric'}\r\n        return new Date(a).toLocaleString('ua', options)\r\n    };\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Fragment>\r\n                <div className='time__current'>\r\n                    {this.getDateString()}\r\n                </div>\r\n                {this.props.children}\r\n                {\r\n                this.props.error\r\n                    ?null\r\n                    :<Fragment>\r\n                        <ul className='time-list'>\r\n                            <li className='time-list__item'>\r\n                                Sunrise {this.getSunTime(this.props.data.sunrise * 1000)}\r\n                            </li>\r\n                            <li className='time-list__item'>\r\n                                Sunset {this.getSunTime(this.props.data.sunset * 1000)}\r\n                            </li>\r\n                            <li className='time-list__item'>\r\n                                Day length {this.getDayLength(this.props.data.sunrise, this.props.data.sunset)}\r\n                            </li>\r\n                        </ul>\r\n                        <footer className='footer'>\r\n                            <Form\r\n                                id={'footer'}\r\n                            />\r\n                        </footer>\r\n                    </Fragment>\r\n                }\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\nfunction mapStateToProps(state){\r\n    return{\r\n        data: state.weathers.systemData,\r\n        error: state.weathers.error\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(DateTime)","import React, {Component, Fragment} from 'react';\r\nimport NavBar from \"../components/Navigation/NavBar\"\r\nimport DateTime from \"../components/UI/DateTime\"\r\n\r\nclass Layout extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n\r\n                <header className='header'>\r\n                    <NavBar />\r\n                </header>\r\n\r\n                <main className='container'>\r\n                    <DateTime>\r\n                        { this.props.children }\r\n                    </DateTime>\r\n                </main>\r\n\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Layout","import React from 'react';\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div style={{textAlign: 'center'}}>\r\n            <div className='lds-ripple'>\r\n                <div />\r\n                <div />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Loader;","import React from 'react';\r\nimport Form from './UI/Form'\r\nimport {connect} from \"react-redux\"\r\nimport Loader from \"../components/UI/Loader\"\r\nimport {fetchWeathers} from \"../store/actions/weathers\"\r\n\r\nclass ErrorBoundary extends React.Component {\r\n    bodyClassRemove = () =>{\r\n        const body = document.querySelector('body')\r\n        const className = body.classList.item(0)\r\n        return body.classList.remove(className)\r\n    }\r\n    render() {\r\n        if(this.props.error){\r\n            this.bodyClassRemove()\r\n            return (\r\n                <div className='container'>\r\n                    <Loader />\r\n                    <div className=\"error\">\r\n                        Please enter the name of the city located in Ukraine.\r\n                    </div>\r\n                    <Form\r\n                        id={'error'}\r\n                    />\r\n                </div>\r\n            );\r\n        } else{\r\n            return this.props.children\r\n        }\r\n    }\r\n\r\n}\r\nfunction mapStateToProps(state) {\r\n    return{\r\n        error: state.weathers.error,\r\n        cityName: state.weathers.cityName,\r\n    }\r\n}\r\nfunction mapDispatchToProps(dispatch){\r\n    return{\r\n        fetchWeathers: () => dispatch(fetchWeathers()),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ErrorBoundary);","import React from \"react\"\r\nimport Loader from \"../components/UI/Loader\"\r\nimport {connect} from \"react-redux\"\r\nimport {fetchWeathers} from \"../store/actions/weathers\"\r\nimport ErrorBoundary from \"../components/ErrorBoundary\"\r\n\r\n\r\nclass WeatherToday extends React.Component {\r\n    componentDidMount() {\r\n        this.props.fetchWeathers()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.cityName !== this.props.cityName) {\r\n            this.props.fetchWeathers()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ErrorBoundary>\r\n                {this.props.loading && this.props.length !== 0\r\n                    ? <Loader/>\r\n                    : <div className='current'>\r\n                        <div className='current-header'>\r\n                            <div className='city-name'>\r\n                                {this.props.cityName}\r\n                            </div>\r\n\r\n                            <div className='current-header__info'>\r\n                                <img\r\n                                    className='current-header__icon'\r\n                                    src={`http://openweathermap.org/img/wn/${this.props.weatherConditions.icon}@2x.png`}\r\n                                    alt={this.props.weatherConditions.description}\r\n                                    title={this.props.weatherConditions.main}/>\r\n                                <div className='current-header__icon-description'>{this.props.weatherConditions.description}</div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className='current-info'>\r\n                            <div className='current-info-main'>\r\n                                <div className='current-info-main__temp'>\r\n                                    {Math.round(this.props.weatherMain.temp) + ' °C'}\r\n                                </div>\r\n                                <div className='current-info-main__feel-temp'>\r\n                                    Feels like: <strong>{Math.round(this.props.weatherMain.feels_like) + ' °C'}</strong>\r\n                                </div>\r\n                            </div>\r\n                            <ul className='current-conditions'>\r\n                                <li className='current-conditions__items'>\r\n                                    Wind: {Math.round(this.props.wind.speed) + '  m/s'}\r\n                                </li>\r\n                                <li className='current-conditions__items'>\r\n                                    Pressure: {this.props.weatherMain.pressure + ' hPa'}\r\n                                </li>\r\n                                <li className='current-conditions__items'>\r\n                                    Humidity: {this.props.weatherMain.humidity + ' %'}\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </ErrorBoundary>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n    return{\r\n        weatherMain: state.weathers.weatherMain,\r\n        weatherConditions: state.weathers.weatherConditions,\r\n        wind: state.weathers.wind,\r\n        systemData: state.weathers.systemData,\r\n        cityName: state.weathers.cityName,\r\n        loading: state.weathers.loading,\r\n    }\r\n}\r\nfunction mapDispatchToProps(dispatch){\r\n    return{\r\n        fetchWeathers: () => dispatch(fetchWeathers()),\r\n    }\r\n}\r\n\r\nexport default  connect(mapStateToProps, mapDispatchToProps)(WeatherToday)","import React from 'react';\r\n\r\nfunction WeathersFiveDayListItems(props) {\r\n    const {listItem} = props;\r\n    return (\r\n        <li className='five-hours-item'>\r\n            <div className='five-hours-item__main'>\r\n                    <span>{Math.round(listItem.main.temp)}</span>  °C\r\n            </div>\r\n            <ul className='five-hours-item__container'>\r\n                <li className='five-hours-item__info'>\r\n                    Feels like: {Math.round(listItem.main.feels_like)} °C\r\n                </li>\r\n                <li className='five-hours-item__info'>\r\n                    Humidity: {Math.round(listItem.main.humidity)} %\r\n                </li>\r\n                <li className='five-hours-item__info'>\r\n                    Pressure: {Math.round(listItem.main.pressure)} hPa\r\n                </li>\r\n                <li className='five-hours-item__info'>\r\n                    Wind: {Math.round(listItem.wind.speed)} m/s\r\n                </li>\r\n            </ul>\r\n            <div className='five-hours-item__image'>\r\n                <img\r\n                    className='five-hours-item__icon'\r\n                    src={`http://openweathermap.org/img/wn/${listItem.weather[0].icon}@2x.png`}\r\n                    alt=\"description\"\r\n                    title={listItem.weather[0].description}/>\r\n            </div>\r\n        </li>\r\n    );\r\n}\r\n\r\n\r\nexport default WeathersFiveDayListItems;","import React, {Component} from 'react';\r\nimport WeathersFiveDayListItems from './WeathersFiveDayListHoursItems/WeathersFiveDayListItems'\r\nimport InputRange from 'react-input-range'\r\n\r\nclass WeatherFiveListHours extends Component {\r\n    state={\r\n        value: 0\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getValue()\r\n    }\r\n\r\n    dayString = props => {\r\n        return (\r\n            <div className='five-hours-date'>\r\n                <div className='five-hours-date__numeric'>\r\n                    {new Date(props * 1000).toLocaleDateString()}\r\n                </div>\r\n                <div className='five-hours-date__week-day'>\r\n                    {new Date(props * 1000).toLocaleString('en-Ua',{weekday:'long'})}\r\n                </div>\r\n            </div>\r\n        )\r\n    };\r\n\r\n    formatLabel = (value) => {\r\n        const time = props =>\r\n            new Date(props * 1000).toLocaleTimeString('ua', {hour: 'numeric', minute: 'numeric'} );\r\n        return time(this.props.daysFilter(this.props.dayIndex)[value].dt)\r\n    }\r\n\r\n    getValue = () => {\r\n        const index = this.props.dayIndex\r\n        const length = this.props.daysFilter(index).length\r\n        if(length === 1){\r\n            document.getElementById(`input-${index}`).style.display = 'none'\r\n            let el = document.createElement('div')\r\n            el.innerText = this.formatLabel(this.state.value)\r\n            document.querySelectorAll('.five-hours-date')[index].appendChild(el)\r\n        } else if (length > 6){\r\n            this.setState({\r\n                value: 3\r\n            })\r\n        } else {\r\n            const value = Math.floor((length - 1) / 2)\r\n            this.setState({\r\n                value\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {dayIndex, date, daysFilter} = this.props\r\n        return (\r\n            <div>\r\n                {this.dayString(date)}\r\n                <div className=\"input\" id={`input-${dayIndex}`}>\r\n                    <InputRange\r\n                        formatLabel={value => this.formatLabel(value)}\r\n                        maxValue={daysFilter(dayIndex).length-1}\r\n                        minValue={0}\r\n                        value={this.state.value}\r\n                        onChange={value=> this.setState({ value })}\r\n                    />\r\n                </div>\r\n                <ul\r\n                    className=\"five-hours-list\"\r\n                    key={dayIndex}>\r\n                    {/*eslint-disable-next-line*/}\r\n                    {daysFilter(dayIndex).map((listItem, index)=>{\r\n                        if(this.state.value === index){\r\n                            return(\r\n                                <WeathersFiveDayListItems\r\n                                    listItem={listItem}\r\n                                    key={listItem.dt}\r\n                                />\r\n                                )\r\n                            }\r\n                        }\r\n                    )}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default WeatherFiveListHours;","import React from 'react';\r\nimport WeatherFiveListHours from './WeatherFiveListHours/WeatherFiveListHours'\r\n\r\nclass WeathersFiveListDay extends React.Component{\r\n    render() {\r\n        const {daysFilter, dayDate} = this.props;\r\n        return (\r\n            <div className='weatherFiveDayItems'>\r\n                {dayDate.map((item, index) =>{\r\n                    return(\r\n                        <div\r\n                            className=\"five-days-container\"\r\n                            key={item.dt}>\r\n                            <WeatherFiveListHours\r\n                                dayIndex={index}\r\n                                date={item.dt}\r\n                                daysFilter={daysFilter}\r\n                            />\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n};\r\n\r\nexport default WeathersFiveListDay;","import React from 'react';\r\nimport Loader from \"../components/UI/Loader\"\r\nimport WeathersFiveListDay from \"../components/WeathersFiveDayItems/WeathersFiveListDay\"\r\nimport ErrorBoundary from \"../components/ErrorBoundary\"\r\nimport {connect} from \"react-redux\"\r\nimport {fetchWeathersFiveDays} from \"../store/actions/weathers\"\r\n\r\n\r\nclass WeatherFiveDay extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchWeathersFiveDays()\r\n\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.cityName !== this.props.cityName) {\r\n            this.props.fetchWeathersFiveDays()\r\n        }\r\n    }\r\n\r\n    daysFilter = props => {\r\n        let time = Date.parse(Date()) + 3*3600000 + (86400000 * props);\r\n        return this.props.weatherInfoFiveDays.filter(item =>\r\n            new Date(time).toLocaleDateString() === new Date(item.dt * 1000).toLocaleDateString())\r\n    };\r\n    dayDate = () => {\r\n        let dayDate = [];\r\n        for (let i = 0; i < 6; i++) {\r\n            if(this.daysFilter(i)[0]) {\r\n                dayDate.push(this.daysFilter(i)[0])\r\n            }\r\n        }\r\n        return dayDate\r\n    };\r\n    \r\n    render() {\r\n        return (\r\n            <ErrorBoundary>\r\n                <div className=''>\r\n                    <div className='five-header'>\r\n                        <div className='city-name' > {this.props.cityName} </div>\r\n                        <div className='five-header__title'>Hourly weather and forecasts in your city.</div>\r\n                    </div>\r\n                    {this.props.loading\r\n                        ? <Loader />\r\n                        : <div className='five-main'>\r\n                            <WeathersFiveListDay\r\n                                weatherInfo={this.props.weatherInfoFiveDays}\r\n                                daysFilter={this.daysFilter}\r\n                                dayDate={this.dayDate()}\r\n                            />\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </ErrorBoundary>\r\n\r\n        );\r\n    }\r\n}\r\nfunction mapStateToProps(state) {\r\n    return{\r\n        cityName: state.weathers.cityName,\r\n        weatherInfoFiveDays: state.weathers.weatherInfoFiveDays,\r\n        loading: state.weathers.loading,\r\n    }\r\n}\r\nfunction mapDispatchToProps(dispatch){\r\n    return{\r\n        fetchWeathersFiveDays: () => dispatch(fetchWeathersFiveDays()),\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(WeatherFiveDay);","import React from \"react\";\r\nimport Layout from \"./hoc/layout\"\r\nimport WeatherToday from \"./containers/WeatherToday\"\r\nimport WeatherFiveDay from \"./containers/WeatherFiveDay\"\r\nimport {Route, Switch, Redirect} from \"react-router-dom\"\r\n\r\nfunction App(){\r\n    return(\r\n        <div>\r\n            <Layout>\r\n                <Switch>\r\n                    {<Route path='/weatherForecast/five-day'  component={WeatherFiveDay} /> ?? <Redirect to={'/weatherForecast/'} />}\r\n                    <Route path='/weatherForecast/' exact component={WeatherToday} />\r\n                    <Redirect to={'/weatherForecast/'} />\r\n                </Switch>\r\n            </Layout>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App;","import {\r\n    FETCH_WEATHERS_START,\r\n    FETCH_WEATHERS_SUCCESS,\r\n    FETCH_WEATHERS_ERROR,\r\n    SET_CITY_NAME,\r\n    FETCH_WEATHERS_SUCCESS_FIVE_DAYS\r\n} from \"../actions/actionTypes\"\r\n\r\nconst initialState ={\r\n    weatherMain: [],\r\n    weatherConditions: [],\r\n    wind: [],\r\n    systemData: [],\r\n    cityName: 'Kharkov',\r\n    loading: false,\r\n    error: null,\r\n    cityDataFiveDays: [],\r\n    weatherInfoFiveDays: []\r\n}\r\n\r\nexport default function weathersReducer(state=initialState, action) {\r\n    switch(action.type){\r\n        case FETCH_WEATHERS_START:\r\n            return{\r\n                ...state, loading: true\r\n            }\r\n        case FETCH_WEATHERS_SUCCESS:\r\n            return{\r\n                ...state,\r\n                loading: false,\r\n                weatherConditions: action.weatherConditions,\r\n                weatherMain: action.weatherMain,\r\n                wind: action.wind,\r\n                systemData: action.systemData,\r\n                error: null\r\n            }\r\n        case FETCH_WEATHERS_ERROR:\r\n            return{\r\n                ...state, loading: false, error: action.error\r\n            }\r\n        case FETCH_WEATHERS_SUCCESS_FIVE_DAYS:\r\n            return{\r\n                ...state,\r\n                loading: false,\r\n                systemData: action.cityDataFiveDays,\r\n                weatherInfoFiveDays: action.weatherInfoFiveDays,\r\n                error: null\r\n            }\r\n        case SET_CITY_NAME:\r\n            return{\r\n                ...state, cityName: action.cityName\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    ADD_STYLE\r\n} from \"../actions/actionTypes\"\r\n\r\nconst initialState = {\r\n    backStyle: ''\r\n}\r\n\r\nexport default function backgroundReducer(state = initialState, action) {\r\n    switch(action.type){\r\n        case ADD_STYLE:\r\n            return{\r\n                ...state, backStyle: action.backStyle\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import {combineReducers} from \"redux\"\r\nimport weathersReducer from \"./weathers\"\r\nimport backgroundReducer from \"./background\"\r\n\r\nexport default combineReducers({\r\n    weathers: weathersReducer,\r\n    background: backgroundReducer\r\n})","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './stylesheets/style.scss'\r\nimport {BrowserRouter} from \"react-router-dom\"\r\nimport {createStore, compose, applyMiddleware} from \"redux\"\r\nimport {Provider} from \"react-redux\"\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./store/reducers/rootReducer\"\r\n\r\nconst composeEnhancers =\r\n    typeof window === 'object' &&\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\r\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n        }) : compose;\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n);\r\n\r\nconst app = (\r\n    <Provider store={store}>\r\n        <BrowserRouter>\r\n            <App />\r\n        </BrowserRouter>\r\n    </Provider>\r\n\r\n)\r\n        \r\nReactDOM.render(app, document.getElementById('root'));\r\n"],"sourceRoot":""}